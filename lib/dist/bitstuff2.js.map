{"version":3,"sources":["bitstuff2.ts"],"names":[],"mappings":"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","file":"bitstuff2.js","sourcesContent":["// bitstuff2.ts\n//\n// Copyright (c) 2016 Frank Lin (lin.xiaoe.f@gmail.com)\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n\nexport interface BitStuff2DecodeResult {\n  data: Uint32Array;\n  filePosition: number;\n}\n\n/**\n * BitStuff2 is a TypeScript migration from esri/lerc C++ implementation.\n * Warning: We are only going to support lerc2 version 3 and later.\n */\nexport class BitStuff2 {\n\n  private lerc2Version_: number = 0;\n  private buffer_: Uint8Array = undefined;\n  private fp_: number = 0;\n\n  constructor(buffer: Uint8Array) {\n    this.buffer_ = buffer;\n  }\n\n  setLerc2Version(lerc2Version: number): void {\n    this.lerc2Version_ = lerc2Version;\n  }\n\n  setFilePosition(fp: number): void {\n    this.fp_ = fp;\n  }\n\n  decode(): BitStuff2DecodeResult {\n    var dataArray: Uint32Array = new Uint32Array(0);\n\n    var numBitsByte: number = this.buffer_[this.fp_];\n    this.fp_++;\n\n    var bits67: number = numBitsByte >>> 6;\n    var n: number = (bits67 === 0) ? 4 : 3 - bits67;\n\n    var doLut: boolean = (numBitsByte & (1 << 5)) ? true : false;    // bit 5\n    numBitsByte &= 31;    // bits 0-4;\n\n    var numElements: number = this.decodeUInt_(n);\n\n    var numBits: number = numBitsByte;\n    if (!doLut) {\n      if (numBits > 0) {\n        if (this.lerc2Version_ >= 3) {\n          dataArray = this.unstuff_(numElements, numBits);\n        } else {\n          throw \"BitStuff2 decode failed because of unsupported lerc2 version (we are supporting version 3 and later\";\n        }\n      }\n    } else {\n      var nLutByte: number = this.buffer_[this.fp_];\n      this.fp_++;\n\n      var nLut: number = nLutByte - 1;\n      var tmpLutArray: Uint32Array;\n      if (this.lerc2Version_ >= 3) {\n        tmpLutArray = this.unstuff_(nLut, numBits); // unstuff lut w/o the 0\n      } else {\n        throw \"BitStuff2 decode failed because of unsupported lerc2 version\";\n      }\n\n      var nBitsLut: number = 0;\n      while (nLut >> nBitsLut) {\n        nBitsLut++;\n      }\n\n      if (this.lerc2Version_ >= 3) {\n        dataArray = this.unstuff_(numElements, nBitsLut); // unstuff indexes\n      }\n\n      // replace indexes by values\n      var tmpLutArray2 = new Uint32Array(tmpLutArray.length + 1);\n      tmpLutArray2[0] = 0;\n      for (let i = 0; i < numElements; i++) {\n        tmpLutArray2[i + 1] = tmpLutArray[i];\n      }\n      for (let i = 0; i < numElements; i++) {\n        dataArray[i] = tmpLutArray2[dataArray[i]];\n      }\n    }\n\n    return {data: dataArray, filePosition: this.fp_};\n  }\n\n  decodeUInt_(numFixedLengthValue: number): number {\n    var numElements = 0;\n\n    if (numFixedLengthValue === 1) {\n      numElements = this.buffer_[this.fp_];\n    } else if (numFixedLengthValue === 2) {\n      var dv = new DataView(this.buffer_);\n      numElements = dv.getUint16(this.fp_);\n    } else if (numFixedLengthValue === 4) {\n      var dv = new DataView(this.buffer_);\n      numElements = dv.getUint32(this.fp_);\n    } else {\n      throw \"BitStuff2 DecodeUInt failed\";\n    }\n\n    this.fp_ += numFixedLengthValue;\n    return numElements;\n  }\n\n  unstuff_(numElements: number, numBits: number): Uint32Array {\n    let dataArray: Uint32Array = new Uint32Array(numElements);\n\n    let numUInts: number = parseInt(<any>((numElements * numBits + 31) / 32)); // fake the typescript compiler\n    let numBytes: number = numUInts * 4;\n\n    let bitStuffDv: DataView = new DataView(new Uint32Array(numUInts).buffer);\n    bitStuffDv.setUint32(numUInts * 4 - 4, 0, true); // set last uint to 0\n\n    // copy the bytes from the incoming byte stream\n    let numBytesUsed: number = numBytes - BitStuff2.numTailBytesNotNeeded_(numElements, numBits);\n    for (let i = 0; i < numBytesUsed; i++) {\n      bitStuffDv.setUint8(i, this.buffer_[this.fp_ + i]);\n    }\n\n    // do the un-stuffing\n    let srcPos: number = 0;\n    let dstPos: number = 0;\n    let destDataView: DataView = new DataView(dataArray.buffer);\n\n    let bitPos: number = 0;\n    let nb: number = 32 - numBits;\n\n    for (let i = 0; i < numElements; i++) {\n      if (nb - bitPos >= 0) {\n        let srcVal: number = bitStuffDv.getUint32(srcPos, true);\n\n        let dstVal: number = (srcVal << (nb - bitPos)) >>> nb;\n        destDataView.setUint32(dstPos, dstVal, true);\n        dstPos += 4;\n        bitPos += numBits;\n        if (bitPos === 32) { // shift >= 32 is undefined\n          srcPos += 4;\n          bitPos = 0;\n        }\n      } else {\n        let dstVal: number = bitStuffDv.getUint32(srcPos, true) >>> bitPos;\n        destDataView.setUint32(dstPos, dstVal, true);\n        srcPos += 4;\n\n        let tmpVal: number = bitStuffDv.getUint32(srcPos, true) << (64 - numBits - bitPos) >>> nb;\n        destDataView.setUint32(dstPos, dstVal |= tmpVal, true);\n        dstPos += 4;\n        bitPos -= nb;\n      }\n    }\n\n    this.fp_ += numBytesUsed;\n    return dataArray;\n  }\n\n  static numTailBytesNotNeeded_(numElements: number, numBits: number): number {\n    let numBitsTail: number = (numElements * numBits) & 31;\n    let numBytesTail: number = (numBitsTail + 7) >>> 3;\n    return (numBytesTail > 0) ? 4 - numBytesTail : 0;\n  }\n}\n"],"sourceRoot":"/source/"}