{"version":3,"sources":["../src/lercdecoder2.js"],"names":[],"mappings":"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","file":"lercdecoder2.js","sourcesContent":["// lercdecoder2.js\n//\n// Copyright (c) 2016 Frank Lin (lin.xiaoe.f@gmail.com)\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {BitStuff2} from './bitstuff2';\n\nvar math = require('mathjs');\n\nvar DataType = {\n  CHAR: 0,\n  BYTE: 1,\n  SHORT: 2,\n  USHORT: 3,\n  INT: 4,\n  UINT: 5,\n  FLOAT: 6,\n  DOUBLE: 7,\n  UNDEFINED: 8\n};\n\nexport class Lerc2Decoder {\n\n  constructor(buffer) {\n    this.FILE_KEY_ = \"Lerc2 \";\n\n    this.buffer_ = buffer;\n    this.fp_ = 0;\n    this.headerInfo_ = {};\n    this.pixelValuesDataView_ = null;\n\n    this.bitStuff2Util_ = new BitStuff2(buffer);\n  }\n\n  parse() {\n    // parse header and set lerc2 version to bitStuff2\n    this.readHeader_();\n    this.bitStuff2Util_.setLerc2Version(this.headerInfo_.version);\n\n    // You can safely skip this step.\n    if (!this.isChecksumMatch_())\n      throw \"Checksum is not matched\";\n\n    //TODO(lin.xiaoe.f@gmail.com): Assumes the data type is float.\n    this.pixelValuesDataView_ = new DataView(new Uint8Array(this.headerInfo_.height * this.headerInfo_.width * 4).buffer);\n\n    if (this.headerInfo_.numValidPixel === 0)\n      return;\n\n    //TODO(lin.xiaoe.f@gmail.com): Read mask, assumes bit mask is all valid now.\n    this.readMask_();\n\n    if (this.headerInfo_.zMin === this.headerInfo_.zMax) {\n      //TODO(lin.xiaoe.f@gmail.com): Image is const, implement it later.\n      throw \"Const image is not implemented yet\";\n    }\n\n    var readDataOneSweepFlag = this.buffer_[this.fp_]; // read flag\n    this.fp_++;\n\n    if (readDataOneSweepFlag === 0) { // no binary data in one sweep\n      this.readTiles_();\n    } else {\n      //TODO(lin.xiaoe.f@gmail.com): ReadTile data one sweep goes for here.\n      console.log(\"Read data one sweep\");\n    }\n\n    return { pixelData: this.pixelValuesDataView_.buffer };\n  }\n\n  readHeader_() {\n    // file header first 6 chars should be \"Lerc2\", byte offset is 0.\n    var bytes = new Uint8Array(this.buffer_, 0, 6);\n    this.headerInfo_.fileIdentifierString = String.fromCharCode.apply(null, bytes);\n    if (this.headerInfo_.fileIdentifierString != this.FILE_KEY_) {\n      throw \"Unexpected file identifier string: \" + this.headerInfo_.fileIdentifierString;\n    }\n\n    // lerc stores in little endian\n    var view = new DataView(this.buffer_);\n    this.headerInfo_.version = view.getInt32(6, true);         // Int 4\n    this.headerInfo_.checkSum = view.getUint32(10, true);      // UInt 4\n    this.headerInfo_.height = view.getInt32(14, true);         // Int 4\n    this.headerInfo_.width = view.getInt32(18, true);          // Int 4\n    this.headerInfo_.numValidPixel = view.getInt32(22, true);  // Int 4\n    this.headerInfo_.microBlockSize = view.getInt32(26, true); // Int 4\n    this.headerInfo_.blobSize = view.getInt32(30, true);       // Int 4\n    this.headerInfo_.lercDataType = view.getInt32(34, true);   // Int 4\n    this.headerInfo_.maxZError = view.getFloat64(38, true);    // Double 8\n    this.headerInfo_.zMin = view.getFloat64(46, true);         // Double 8\n    this.headerInfo_.zMax = view.getFloat64(54, true);         // Double 8\n\n    this.fp_ += 62;\n  }\n\n  isChecksumMatch_() {\n    if (this.headerInfo_.version >= 3) {\n      var nChecksumFieldBytes = this.FILE_KEY_.length + 8; // start right after the checksum entry\n      var checksum = this.computeChecksumFletcher32_(this.headerInfo_.blobSize - nChecksumFieldBytes);\n\n      console.log(`checksum is ${checksum} and headerinfo checksum is ${this.headerInfo_.checkSum}`);\n      if (checksum != this.headerInfo_.checkSum) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  computeChecksumFletcher32_(len) {\n    var lercBlobLen = len;\n\n    var sum1 = math.bignumber(0xffff);\n    var sum2 = math.bignumber(0xffff);\n    var words = parseInt(lercBlobLen / 2);\n\n    var iByte = this.FILE_KEY_.length + 8; // start right after the checksum entry\n\n    while (words) {\n      var tlen = (words >= 359) ? 359 : words;\n      words -= tlen;\n      do {\n        sum1 = math.sum(sum1, this.buffer_[iByte++] << 8);\n        sum1 = math.sum(sum1, this.buffer_[iByte++]);\n        sum2 = math.sum(sum1, sum2);\n      } while (--tlen);\n\n      sum1 = math.sum(math.bitAnd(sum1, 0xffff), math.rightArithShift(sum1, 16));\n      sum2 = math.sum(math.bitAnd(sum2, 0xffff), math.rightArithShift(sum2, 16));\n    }\n\n    // add the straggler byte if it exists\n    if (lercBlobLen & 1) {\n      sum1 = math.sum(sum1, math.leftShift(this.buffer_[iByte], 8));\n      sum2 = math.sum(sum1, sum2);\n    }\n\n    // second reduction step to reduce sums to 16 bits\n    sum1 = math.sum(math.bitAnd(sum1, 0xffff), math.rightArithShift(sum1, 16));\n    sum2 = math.sum(math.bitAnd(sum2, 0xffff), math.rightArithShift(sum2, 16));\n\n    // sum2 << 16 | sum1 is greater than INT_MAX use math.js instead.\n    var result = math.leftShift(math.bignumber(sum2), 16);\n    result = math.bitOr(result, sum1);\n\n    return result;\n  }\n\n  computeChecksumFletcher32Wrong_(len) {\n    var lercBlobLen = len;\n\n    var sum1 = 0xffff;\n    var sum2 = 0xffff;\n    var words = parseInt(lercBlobLen / 2);\n\n    var iByte = 14;\n\n    while(words) {\n      var tlen = (words >= 359) ? 359 : words;\n      words -= tlen;\n      do {\n        sum1 += (this.buffer_[iByte++] << 8);\n        sum2 += sum1 += this.buffer_[iByte++];\n        console.log(sum2);\n      } while (--tlen);\n\n      sum1 = (sum1 & 0xffff) + (sum1 >> 16);\n      sum2 = (sum2 & 0xffff) + (sum2 >> 16);\n    }\n\n    // add the straggler byte if it exists\n    if (lercBlobLen & 1) {\n      sum2 += sum1 += (this.buffer_[iByte] << 8);\n    }\n\n    // second reduction step to reduce sums to 16 bits\n    sum1 = (sum1 & 0xffff) + (sum1 >> 16);\n    sum2 = (sum2 & 0xffff) + (sum2 >> 16);\n    console.log(\"Sum1 is \" + sum1 + \" ,sum2 is \" + sum2);\n\n    // sum2 << 16 | sum1 is greater than INT_MAX use math.js instead.\n    var result = math.leftShift(math.bignumber(sum2), 16);\n    result = math.bitOr(result, sum1);\n\n    console.log(\"Bignumber result is \" + result);\n\n    return result;\n  }\n\n  readMask_() {\n    var numValid = this.headerInfo_.numValidPixel;\n    var width = this.headerInfo_.width;\n    var height = this.headerInfo_.height;\n\n    // get mask blob size in bytes\n    var dataView = new DataView(this.buffer_);\n    var numBytesMask = dataView.getInt32(this.fp_, true);\n    this.fp_ += 4;\n\n    if ((numValid === 0 || numValid === width * height) && (numBytesMask != 0))\n      throw \"Read mask failed\";\n\n    if (numValid == 0) {\n      //TODO(lin.xiaoe.f@gmail.com): Bit Mask is all invalid.\n      console.log(\"All pixels are invalid\");\n    } else if (numValid === width * height) {\n      //TODO(lin.xiaoe.f@gmail.com): Bit Mask is all valid.\n      console.log(\"All pixels are valid\");\n    } else if (numBytesMask > 0) {\n      //TODO(lin.xiaoe.f@gmail.com): RLE decompress.\n      console.log(\"Need RLE decompress\");\n      this.fp_ += numBytesMask;\n    }\n  }\n\n  readTiles_() {\n    if (this.headerInfo_.version > 1 &&\n      (this.headerInfo_.lercDataType === DataType.BYTE || this.headerInfo_.lercDataType === DataType.CHAR) &&\n      this.headerInfo_.maxZError === 0.5) {\n      //TODO(lin.xiaoe.f@gmail.com): Try Huffman.\n      throw \"Try Huffman is not implemented yet\";\n    }\n\n    var mbSize = this.headerInfo_.microBlockSize;\n    var height = this.headerInfo_.height;\n    var width = this.headerInfo_.width;\n\n    var numTilesVertical = (height + mbSize - 1) / mbSize;\n    var numTilesHorizontal = (width + mbSize - 1) / mbSize;\n\n    for (var iTile = 0; iTile < numTilesVertical; iTile++) {\n      var tileH = mbSize;\n      var i0 = iTile * tileH;\n      if (iTile == numTilesVertical - 1) {\n        tileH = height - i0;\n      }\n\n      for (var jTile = 0; jTile < numTilesHorizontal; jTile++) {\n        var tileW = mbSize;\n        var j0 = jTile * tileW;\n        if (jTile == numTilesHorizontal - 1)\n          tileW = width - j0;\n\n        this.readTile_(i0, i0 + tileH, j0, j0 + tileW);\n      }\n    }\n  }\n\n  readTile_(i0, i1, j0, j1) {\n    var compareFlag = this.buffer_[this.fp_++];\n    var bits67 = compareFlag >> 6;\n\n    var testCode = (compareFlag >> 2) & 15; // use bits 2345 for integrity check\n    if (testCode != ((j0 >> 3) & 15)) {\n      throw \"Read tile integrity check failed\";\n    }\n\n    compareFlag &= 3;\n\n    if (compareFlag === 2) { // entire tile is constant 0 (if valid or invalid doesn't matter)\n      //TODO(lin.xiaoe.f@gmail.com): entire tile is constant 0.\n      throw \"entire tile is constant 0 is not supported yet\";\n    } else if (compareFlag === 0) { // read z's binary uncompressed\n      //TODO(lin.xiaoe.f@gmail.com): raw binary.\n      throw \"raw binary is not supported yet\";\n    } else {\n      var dataTypeUsed = this.getDataTypeUsed_(bits67);\n      var offset = this.readVariableDataType_(dataTypeUsed);\n      if (compareFlag === 3) {\n        for (var i = i0; i < i1; i++) {\n          var k = i * this.headerInfo_.width + j0;\n          for (var j = j0; j < j1; j++, k++) {\n            // if (bitMask.IsValid(k))\n            if (this.headerInfo_.lercDataType === DataType.FLOAT) {\n              this.pixelValuesDataView_.setFloat32(k * 4, parseFloat(offset), true);\n            } else {\n              throw \"DataType rather than FLOAT is not supported yet\";\n            }\n          }\n        }\n      } else {\n        this.bitStuff2Util_.setFilePosition(this.fp_);\n        var bitDecodeResult = this.bitStuff2Util_.decode();\n\n        var bufferArray = bitDecodeResult.data;\n        this.fp_ = bitDecodeResult.filePosition;\n\n        var invScale = 2 * this.headerInfo_.maxZError;\n        var srcPos = 0;\n\n        if (bufferArray.length == (i1 - i0) * (j1 - j0)) { // all valid\n          for (var i = i0; i < i1; i++) {\n            var k = i * this.headerInfo_.width + j0;\n            for (var j = j0; j < j1; j++, k++) {\n              var z = offset + bufferArray[srcPos++] * invScale;\n              if (this.headerInfo_.lercDataType === DataType.FLOAT) {\n                this.pixelValuesDataView_.setFloat32(k * 4, math.min(z, this.headerInfo_.zMax), true);\n              } else {\n                throw \"DataType rather than FLOAT is not supported yet\";\n              }\n            }\n          }\n        } else { // not all valid\n          for (var i = i0; i < i1; i++) {\n            var k = i * this.headerInfo_.width + j0;\n            for (var j = j0; j < j1; j++, k++) {\n              // if (m_bitMask.IsValid(k))\n              var z = offset + bufferArray[srcPos++] * invScale;\n              if (this.headerInfo_.lercDataType === DataType.FLOAT) {\n                this.pixelValuesDataView_.setFloat32(k, math.min(z, this.headerInfo_.zMax), true);\n              } else {\n                throw \"DataType rather than FLOAT is not supported yet\";\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n\n  getDataTypeUsed_(tc) {\n    var dt = this.headerInfo_.lercDataType;\n    switch(dt) {\n      case DataType.SHORT:\n      case DataType.INT: return dt - tc;\n      case DataType.USHORT:\n      case DataType.UINT: return dt - 2 * tc;\n      case DataType.FLOAT: return tc === 0 ? dt : (tc === 1 ? DataType.SHORT : DataType.BYTE);\n      case DataType.DOUBLE: return tc === 0 ? dt : dt - 2 * tc + 1;\n      default:\n        return dt;\n    }\n  }\n\n  readVariableDataType_(dataTypeUsed) {\n    switch(dataTypeUsed) {\n      case DataType.CHAR: {\n        var c = this.buffer_[this.fp_];\n        this.fp_ += 1;\n        return c;\n      }\n      case DataType.BYTE: {\n        var b = this.buffer_[this.fp_];\n        this.fp_ += 1;\n        return b;\n      }\n      case DataType.SHORT: {\n        var dv = new DataView(this.buffer_);\n        var s = dv.getInt16(this.fp_, true);\n        this.fp_ += 2;\n        return s;\n      }\n      case DataType.USHORT: {\n        var dv = new DataView(this.buffer_);\n        var us = dv.getUint16(this.fp_, true);\n        this.fp_ += 2;\n        return us;\n      }\n      case DataType.INT: {\n        var dv = new DataView(this.buffer_);\n        var i = dv.getInt32(this.fp_, true);\n        this.fp_ += 4;\n        return i;\n      }\n      case DataType.UINT: {\n        var dv = new DataView(this.buffer_);\n        var ui = dv.getUint32(this.fp_, true);\n        this.fp_ += 4;\n        return ui;\n      }\n      case DataType.FLOAT: {\n        var dv = new DataView(this.buffer_);\n        var f = dv.getFloat32(this.fp_, true);\n        this.fp_ += 4;\n        return f;\n      }\n      case DataType.DOUBLE: {\n        var dv = new DataView(this.buffer_);\n        var d = dv.getFloat64(this.fp_, true);\n        this.fp_ += 4;\n        return d;\n      }\n      default:\n        return 0;\n    }\n  }\n}\n"]}